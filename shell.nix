{ sources ? import ./nix/sources.nix }:

let
  pkgs = import sources.nixpkgs { 
    config.android_sdk.accept_license = true;
    config.allowUnfree = true;
  };

  buildToolsVersion = "30.0.3";
  android = pkgs.callPackage ./nix/android.nix {
    #inherit pkgs;
    #licenseAccepted = true;
 };
  # android-emu = pkgs.callPackage ./nix/android-emulator-30.nix { };

in 
pkgs.mkShell rec {
  buildInputs = with pkgs; [
    # from pkgs
    flutter
    jdk8
    niv
    android-studio
    #from ./nix/*
    android.androidsdk
    android.platform-tools
    # android-emu.emulator
];

  ANDROID_HOME = "${android.androidsdk}/libexec/android-sdk";
  ANDROID_SDK_ROOT = "${android.androidsdk}/libexec/android-sdk";
  JAVA_HOME = pkgs.jdk8.home;
  # ANDROID_AVD_HOME = (toString ./.) + "/.android/avd";
  GRADLE_OPTS = "-Dorg.gradle.project.android.aapt2FromMavenOverride=${ANDROID_SDK_ROOT}/build-tools/${buildToolsVersion}/aapt2";
  # ANDROID_EMULATOR_USE_SYSTEM_LIBS = 1;
  FLUTTER_SDK = pkgs.flutter.unwrapped;
  DART_SDK = "${FLUTTER_SDK}/bin/cache/dart-sdk";

#   shellHook = ''
#     # Write out local.properties for Android Studio.
#     cat <<EOF > local.properties
# # This file was automatically generated by nix-shell.
# sdk.dir=$ANDROID_SDK_ROOT
# ndk.dir=$ANDROID_NDK_ROOT
# cmake.dir=$cmake_root
# EOF
#   '';
}
